ex1
a)1 d)8  g)64  j)512
b)2 e)16 h)128 k)1024
c)4 f)32 i)256 l)2048

ex2
a)11 d)7  g)4  j)512
b)10  e)6  h)3 k)1024
c)9  f)5  i)2 l)2048

Contagem de operacoes
1) 3 subtracoes 
2) 3 no melhor caso e 5 no pior caso
3) 5 no melhor caso e 7 no pior caso
4) 4 subtracoes 
5) 2n subtracoes
6) 3 subtracoes 
7) n - 3 subtracoes

Contagem de operacoes com repeticao
5) 4 subtracoes
6) 8 subtracoes
7) 8 subtracoes 2 pra cada par e uma pra cada impar
8) 6 subtracoes
8(repetido) - n^2 subtracoes
9) 9 subtracoes. uma no primeiro while e 9 no segundo
10) 2n^2 - 3n
11) n^2 - 7n
12)n/2
13) log2(n+4)/2 + 1
14) log2(n-7)^2 + 1

OBS: Quando tivermos uma estrutura de repeticao em que o escope de busca eh sistematicamente dividido pela metade, temos um custo logaritmico

15) log(n) + 2 
16) log(n)
17) log(n)
18) log(n) + 1

faca um metodo:
a)
i = 0; 
while(i < n){
	i++
	a--;b--;c--;
}
for(i = 0; i < n i ++ ){
	for(j = 0; j < n; j++){
		a--; b--;
	}
}
b)
int k = 0;
for(int i = 0; i < 5n+4n^3; i++){
	k--;
}
c)
int k = 0;
for(int i = 0; i < n; i = i / 2){
	--k;
}
int j = 0;
while(j < n){
	k--;
}
....

1-A operacao mais relevante em um array, eh a comparacao entre seus elementos
2-Nesse caso sera executaad n - 1 vezes

Nocoes sobre notacao
nas notacoes, ignoramos as contantes. 
Entao: 
Um algoritmo que realiza 1 operacao eh O(1)
Um algoritmo que realiza lg(n) operacoes eh O(log(n))
Um algoritmo que realiza n operacoes eh O(n)
Um algoritmo que realiza n^2 operacoes eh O(n^2)
Da mesma forma que:
Um algoritmo que realiza 2,3 ou 5 operacoes eh O(1)
Um algoritmo que realiza 2lg(n), 3lg(n) out 5lg(n) operacoes eh O(log(n))
Um algoritmo que realiza 2n, 3n ou 5n operacoes eh O(n)
Um algoritmo que realiza 2n^2, 3n^2 ou 5n^2 operacoes eh O(n^2)
Ignoramos tambem termos com menor crescimento, entao:
Um algoritmo que realiza 3n + 2n^2 operacoes eh O(n^2)
Um algoritmo que realiza 5n + 4n^3 operacoes eh O(n^3)
Um algoritmo que realiza lg(n) + n operacoes eh O(n)
Um algoritmo que realiza 9n^4 + 5n^2 + n/2 operacoes eh O(n^4)
E por ai vai...

A notacao BIG O, trabalha com o limite superior de um algoritmo, a notacao BIG OMEGA trabalha com o limite inferior de um algoritmo, e a notacao BIG THETA trabalha com o limite de tempo de um algoritmo

